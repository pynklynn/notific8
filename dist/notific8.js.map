{"version":3,"sources":["../src/js/notific8.js"],"names":["notific8","window","notific8Defaults","life","theme","color","sticky","verticalEdge","horizontalEdge","zindex","closeText","onInit","onCreate","onClose","namespace","queue","notific8RegisteredModules","beforeContent","afterContent","beforeContainer","afterContainer","insideContainer","notific8Queue","notific8DataStore","notific8ContainerHandlers","onContainerCreate","destroy","options","containerClass","containers","document","getElementsByClassName","body","getElementsByTagName","length","removeChild","getContainer","data","settings","querySelector","buildClose","closeClasses","push","join","buildHeading","heading","buildMessage","message","notificationClasses","classes","toLowerCase","buildNotification","container","generatedNotificationClasses","num","Number","dataset","notific8s","notificationId","id","replace","notification","notificationName","beforeContentModules","afterContentModules","onCreateHandlers","i","len","module","moduleResults","callbackMethod","concat","html","j","innerHTML","k","setTimeout","getElementById","className","n","l","closeNotification","next","onCloseCallbacks","shift","configure","key","option","indexOf","remove","notificationClass","notifications","parentNode","removeFromQueue","notificationNames","splice","z","init","arrayKeys","propertiesToRemove","onInitHandlers","initContainers","containerClasses","containerStr","beforeContainerModules","insideContainerModules","afterContainerModules","containerPositions","onContainerCreateHandlers","m","position","modifiedContainerStr","tempDoc","implementation","createHTMLDocument","appendChild","firstChild","o","style","zIndex","p","handler","addEventListener","event","target","parentElement","split","checkEdges","errorMessage","console","error","Error","registerModule","moduleName","defaultOptions","defaultValue","modulesRegisteredToPosition","validPositions","trim","generateUniqueId","c","r","v","Math","random","toString","undefined","hasOwnProperty","arguments"],"mappings":"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","file":"notific8.js","sourcesContent":["/**\n * @author Will Steinmetz\n * notific8 Javascript plug-in\n * Copyright (c)2013-2016, Will Steinmetz\n * Licensed under the BSD license.\n * http://opensource.org/licenses/BSD-3-Clause\n */\nvar notific8;\n\nnotific8 = (function() {\n  window.notific8Defaults = {\n    life: 10000,\n    theme: 'ocho',\n    color: 'teal',\n    sticky: false,\n    verticalEdge: 'right',\n    horizontalEdge: 'top',\n    zindex: 1100,\n    closeText: 'close',\n    onInit: [],\n    onCreate: [],\n    onClose: [],\n    namespace: 'notific8',\n    queue: false\n  };\n  window.notific8RegisteredModules = {\n    beforeContent: [],\n    afterContent: [],\n    beforeContainer: [],\n    afterContainer: [],\n    insideContainer: []\n  };\n  window.notific8Queue = [];\n  window.notific8DataStore = {};\n  window.notific8ContainerHandlers = {\n    onContainerCreate: []\n  };\n\n  /**\n   * Destroy the notification\n   * @param {Object} options object defining the settings of the notification\n   */\n  function destroy(options) {\n    let containerClass = options.namespace + \"-container\",\n      containers = document.getElementsByClassName(containerClass),\n      body = document.getElementsByTagName('body')[0];\n\n    while (containers.length > 0) {\n      body.removeChild(containers[0]);\n    }\n  }\n\n  /**\n   * Get the container that the notification is inside of\n   * @params {Object} data object defining the settings of the notification\n   * @return {Object}      html DOM object for the container\n   */\n  function getContainer(data) {\n    let { verticalEdge, horizontalEdge, namespace } = data.settings,\n      containerClass = `.${namespace}-container.${verticalEdge}.${horizontalEdge}`;\n\n    return document.querySelector(containerClass);\n  }\n\n  /**\n   * Build the notification close HTML\n   * @param  {Object} data object defining the settings of the notification\n   * @return {String}      HTML for rendering the close button of the notification\n   */\n  function buildClose(data) {\n    let closeClasses = [ `${data.settings.namespace}-close` ],\n      closeText = '&times;';\n\n    if (data.settings.sticky) {\n      closeClasses.push('sticky');\n      closeText = data.settings.closeText;\n    }\n\n    return `<button type=\"button\" class=\"${closeClasses.join(' ')}\" aria-label=\"dismiss notification\">${closeText}</button>`;\n  }\n\n  /**\n   * Build the HTML for the heading if it is there\n   * @param  {Object} data object defining the settings of the notification\n   * @return {String}      HTML for the heading part of the notification\n   */\n  function buildHeading(data) {\n    if (\n      (data.settings.heading !== null) &&\n      (typeof data.settings.heading === \"string\")\n    ) {\n      return `<header class=\"${data.settings.namespace}-heading\">${data.settings.heading}</header>`;\n    } else {\n      return \"\";\n    }\n  }\n\n  /**\n   * Build the message HTML for the notification\n   * @param  {Object} data object defining the settings of the notification\n   * @return {String}      HTML for the message part of the notification\n   */\n  function buildMessage(data) {\n    return `<div class=\"${data.settings.namespace}-message\">${data.message}</div>`;\n  }\n\n  /**\n   * Build the list of notification classes to apply\n   * @param  {Object} data object defining the settings of the notification\n   * @return {Array}       array of classes to assign to the notification\n   */\n  function notificationClasses(data) {\n    let classes;\n\n    // @TODO remove for 5.0.0 - deprecated\n    if (data.settings.theme.toLowerCase() === 'legacy') {\n      data.settings.theme = 'ocho';\n    }\n    classes = [\n      `${data.settings.namespace}-notification`,\n      `family-${data.settings.theme}`,\n      data.settings.theme,\n      data.settings.color\n    ];\n    if (data.settings.sticky) {\n      classes.push(\"sticky\");\n    }\n    if (\n      (data.settings.heading !== null) &&\n      (typeof data.settings.heading === \"string\")\n    ) {\n      classes.push(\"has-heading\");\n    }\n    return classes;\n  }\n\n  /**\n   * Build the notification and add it to the screen's stack\n   * @param {Object} data object defining the data for building the notification\n   */\n  function buildNotification(data) {\n    var body = document.getElementsByTagName('body')[0],\n      container = getContainer(data),\n      generatedNotificationClasses = notificationClasses(data),\n      namespace = data.settings.namespace,\n      num = Number(body.dataset.notific8s) + 1,\n      notificationId = data.settings.id ? data.settings.id.replace(/\\s/g, '-') : `${namespace}-notification-${num}`,\n      notification = `<article class=\"$notificationClasses\" id=\"${notificationId}\" data-name=\"${data.settings.notificationName}\" role=\"status\" aria-live=\"polite\">`,\n      beforeContentModules = notific8RegisteredModules.beforeContent,\n      afterContentModules = notific8RegisteredModules.afterContent,\n      onCreateHandlers = data.settings.onCreate;\n\n    body.dataset.notific8s = num;\n    for (let i = 0, len = beforeContentModules.length; i < len; i++) {\n      let module = beforeContentModules[i],\n        moduleResults = module.callbackMethod(data);\n      generatedNotificationClasses = generatedNotificationClasses.concat(moduleResults.classes);\n      notification += moduleResults.html;\n    }\n\n    notification += `<div class=\"${data.settings.namespace}-message-content\">${buildHeading(data)} ${buildMessage(data)}</div>`;\n    for (let j = 0, len = afterContentModules.length; j < len; j++) {\n      let module = afterContentModules[j],\n        moduleResults = module.callbackMethod(data);\n      generatedNotificationClasses = generatedNotificationClasses.concat(moduleResults.classes);\n      notification += moduleResults.html;\n    }\n\n    notification += `${buildClose(data)}</article>`;\n    notification = notification.replace('$notificationClasses', generatedNotificationClasses.join(' '));\n    container.innerHTML += notification;\n\n    for (let k = 0, len = onCreateHandlers.length; k < len; k++) {\n      let onCreate = onCreateHandlers[k];\n      onCreate(notification, data);\n    }\n\n    setTimeout(function() {\n      let notification = document.getElementById(notificationId);\n\n      // need to make sure the notification still exists in case of a race\n      // condition due to calling the remove method several times\n      if (!notification) {\n        return;\n      }\n\n      notification.className += \" open\";\n      notific8DataStore[notificationId] = data;\n      if (!data.settings.sticky) {\n        (function(n, l) {\n          setTimeout(function() {\n            closeNotification(notificationId, data);\n          }, l);\n        })(notification, Number(data.settings.life) + 200);\n      }\n    }, 5);\n  };\n\n  /**\n   * Close the given notification\n   * @param {String} notificationId notification ID to look for\n   * @param {Object} data           object defining the data for building the notification\n   */\n  function closeNotification(notificationId, data) {\n    let n = document.getElementById(notificationId);\n\n    // if something happened to cause the notifcation to be removed from the\n    // screen before this method is called (such as with remove), we need to\n    // return so that there isn't an error in the console\n    if (n === null) {\n      return;\n    }\n\n    n.className = n.className.replace('open', '');\n\n    // it's possible this method may be called in quick succession so we need\n    // to isolate scope to this notification\n    (function(notification, notificationId) {\n      let container = getContainer(data),\n        next,\n        onClose,\n        onCloseCallbacks;\n\n      setTimeout(function() {\n        container.removeChild(notification);\n        delete notific8DataStore[notificationId];\n\n        if (data.settings.onClose.length) {\n          onCloseCallbacks = data.settings.onClose;\n          for (let i = 0, len = onCloseCallbacks.length; i < len; i++) {\n            onClose = onCloseCallbacks[i];\n            onClose(notification, data);\n          }\n        }\n\n        // call the next notification in the queue\n        if (notific8Defaults.queue && notific8Queue.length) {\n          next = notific8Queue.shift();\n          notific8(next.message, next.options);\n        }\n      }, 200);\n    })(n, notificationId);\n  }\n\n  /**\n   * Set up the configuration settings\n   * @param {Object} options object containing the options to configure as the defaults\n   */\n  function configure(options) {\n    let key, option;\n\n    for (key in options) {\n      option = options[key];\n      if (['onInit', 'onCreate', 'onClose'].indexOf(key) > -1) {\n        if (typeof option === 'function') {\n          notific8Defaults[key].push(option);\n        } else {\n          notific8Defaults[key] = notific8Defaults[key].concat(option);\n        }\n      } else if (key === 'onContainerCreate') {\n        if (typeof option === 'function') {\n          notific8ContainerHandlers.onContainerCreate.push(option);\n        } else {\n          notific8ContainerHandlers.onContainerCreate = notific8ContainerHandlers.onContainerCreate.concat(option);\n        }\n      } else {\n        notific8Defaults[key] = option;\n      }\n    }\n  }\n\n  /**\n   * Remove the currently visible notifications from the screen\n   * @param {Object} options object containing the options that build the notifications\n   */\n  function remove(options) {\n    let notificationClass = `${options.namespace}-notification`,\n      notifications = document.getElementsByClassName(notificationClass);\n\n    while (notifications.length > 0) {\n      notifications[0].parentNode.removeChild(notifications[0]);\n    }\n  }\n\n  /**\n   * Remove the given notification names from the queue\n   * @param {Mixed} notificationNames list of notifications\n   */\n  function removeFromQueue(notificationNames) {\n    let key, notification;\n\n    if (typeof notificationNames !== \"object\") {\n      notificationNames = [notificationNames];\n    }\n\n    for (let i = 0, len = notificationNames.length; i < len; i++) {\n      notification = notificationNames[i];\n      for (key in notific8Queue) {\n        if (notific8Queue[key].options.notificationName === notification) {\n          notific8Queue.splice(key, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Set up the z-index\n   * @param {Integer} z the z-index to set as the default\n   */\n  function zindex(z) {\n    notific8Defaults.zindex = z;\n  }\n\n  /**\n   * Initialize the plug-in\n   * @param {String} message string representing the message for the notification\n   * @param {Object} options options to build the notification with\n   */\n  function init(message, options) {\n    let arrayKeys = ['onInit', 'onCreate', 'onClose'],\n      data = {\n        settings: {},\n        message: message\n      },\n      key,\n      onInit,\n      option,\n      propertiesToRemove,\n      onInitHandlers;\n\n    for (key in notific8Defaults) {\n      option = notific8Defaults[key];\n      data.settings[key] = option;\n    }\n    for (key in options) {\n      option = options[key];\n      if (arrayKeys.indexOf(key) > -1) {\n        if (typeof option === 'function') {\n          option = [option];\n        }\n        for (let i = 0, len = option.length; i < len; i++) {\n          data.settings[key].push(option[i]);\n        }\n      } else {\n        data.settings[key] = option;\n      }\n    }\n\n    propertiesToRemove = ['onContainerCreate', 'queue'];\n    for (let j = 0, len = propertiesToRemove.length; j < len; j++) {\n      delete data.settings[propertiesToRemove[j]];\n    }\n\n    buildNotification(data);\n    if (data.settings.onInit.length) {\n      onInitHandlers = data.settings.onInit;\n      for (let k = 0, len = onInitHandlers.length; k < len; k++) {\n        onInit = onInitHandlers[k];\n        onInit(data);\n      }\n    }\n  }\n\n  /**\n   * Initialize the containers for the plug-in\n   * @param {Object} options to associate with the notification containers\n   */\n  function initContainers(options) {\n    var body = document.getElementsByTagName('body')[0],\n      containerClasses = [`${options.namespace}-container`],\n      containerStr = \"\",\n      beforeContainerModules,\n      insideContainerModules,\n      afterContainerModules,\n      containerPositions,\n      containers,\n      onContainerCreateHandlers;\n\n    body.dataset.notific8s = 0;\n\n    beforeContainerModules = notific8RegisteredModules.beforeContainer;\n    for (let i = 0, len = beforeContainerModules.length; i < len; i++) {\n      let module = beforeContainerModules[i],\n        moduleResults = module.callbackMethod(notific8Defaults);\n      containerClasses = containerClasses.concat(moduleResults.classes);\n      containerStr += moduleResults.html;\n    }\n\n    containerStr += '<div class=\"$classes $pos\">';\n    insideContainerModules = notific8RegisteredModules.insideContainer;\n    for (let j = 0, len = insideContainerModules.length; j < len; j++) {\n      let module = insideContainerModules[j],\n        moduleResults = module.callbackMethod(notific8Defaults);\n      containerClasses = containerClasses.concat(moduleResults.classes);\n      containerStr += moduleResults.html;\n    }\n    containerStr += '</div>';\n\n    afterContainerModules = notific8RegisteredModules.afterContainer;\n    for (let k = 0, len = afterContainerModules.length; k < len; k++) {\n      let module = afterContainerModules[k],\n        moduleResults = module.callbackMethod(notific8Defaults);\n      containerClasses = containerClasses.concat(moduleResults.classes);\n      containerStr += moduleResults.html;\n    }\n\n    containerPositions = ['top right', 'top left', 'bottom right', 'bottom left'];\n    for (let m = 0, len = containerPositions.length; m < len; m++) {\n      let position = containerPositions[m],\n        modifiedContainerStr = containerStr.replace('$pos', position).replace('$classes', containerClasses.join(' ')),\n        tempDoc = document.implementation.createHTMLDocument('tempDoc');\n      tempDoc.body.innerHTML = modifiedContainerStr;\n      document.body.appendChild(tempDoc.body.firstChild);\n    }\n\n    containers = document.getElementsByClassName(containerClasses[0]);\n    for (let o = 0, len = containers.length; o < len; o++) {\n      let container = containers[o];\n      container.style.zIndex = notific8Defaults.zindex;\n\n      onContainerCreateHandlers = notific8ContainerHandlers.onContainerCreate;\n      for (let p = 0, len = onContainerCreateHandlers.length; p < len; p++) {\n        let handler = onContainerCreateHandlers[p];\n        handler(container, options);\n      }\n\n      container.addEventListener(\"click\", function(event) {\n        let data,\n          target = event.target,\n          notification = target.parentElement,\n          notificationClass = `${options.namespace}-notification`;\n\n        if (notification.className.split(' ').indexOf(notificationClass) === -1) {\n          return;\n        }\n\n        data = notific8DataStore[notification.id];\n        closeNotification(notification.id, data);\n      });\n    }\n  }\n\n  /**\n   * Make sure that the edge options are ok\n   * @param {Object} options options for building the notification\n   */\n  function checkEdges(options) {\n    options.verticalEdge = (options.verticalEdge || notific8Defaults.verticalEdge).toLowerCase();\n    options.horizontalEdge = (options.horizontalEdge || notific8Defaults.horizontalEdge).toLowerCase();\n    if (['left', 'right'].indexOf(options.verticalEdge) === -1) {\n      options.verticalEdge = notific8Defaults.verticalEdge;\n    }\n    if (['top', 'bottom'].indexOf(options.horizontalEdge) === -1) {\n      options.horizontalEdge = notific8Defaults.horizontalEdge;\n    }\n  }\n\n  /**\n   * Displays an error message to the console and throws an error\n   * @param {String} message the error message to display\n   */\n  function errorMessage(message) {\n    console.error(message);\n    throw new Error(message);\n  }\n\n  /**\n   * Register a module for use in the system\n   * @param {String} moduleName       name of the module to register\n   * @param {String} position         position of the module's excution\n   * @param {Object} defaultOptions   default options for the module\n   * @param {Function} callbackMethod method to call for the module\n   */\n  function registerModule(moduleName, position, defaultOptions, callbackMethod) {\n    let defaultValue,\n      module,\n      option,\n      modulesRegisteredToPosition,\n      validPositions;\n\n    if (typeof moduleName !== 'string' || moduleName.trim() === '') {\n      errorMessage(\"moduleName should be a string\");\n    }\n    validPositions = ['beforeContent', 'afterContent', 'beforeContainer', 'afterContainer', 'insideContainer'];\n    if (typeof position !== 'string' || validPositions.indexOf(position) === -1) {\n      errorMessage(\"position should be a string\");\n    }\n    if (typeof defaultOptions !== 'object') {\n      errorMessage(\"defaultOptions should be an object\");\n    }\n    if (typeof callbackMethod !== 'function') {\n      errorMessage(\"callbackMethod should be an function\");\n    }\n    modulesRegisteredToPosition = notific8RegisteredModules[position];\n    for (let i = 0, len = modulesRegisteredToPosition.length; i < len; i++) {\n      module = modulesRegisteredToPosition[i];\n      if (module.moduleName === moduleName) {\n        errorMessage(`Module '${moduleName}' has already been registered`);\n      }\n    }\n    for (option in defaultOptions) {\n      defaultValue = defaultOptions[option];\n      notific8Defaults[option] = defaultValue;\n    }\n    return notific8RegisteredModules[position].push({\n      moduleName: moduleName,\n      callbackMethod: callbackMethod\n    });\n  }\n\n  /**\n   * Generates a unique name to assocate with the notification\n   * Solution found as an answer on StackOverflow:\n   * http://stackoverflow.com/a/2117523/5870787\n   * @return {String} string generateiond for the notification\n   */\n  function generateUniqueId() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      let r, v;\n      r = Math.random() * 16 | 0;\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n\n      return v.toString(16);\n    });\n  }\n\n  /**\n   * Public method for the notification that drives the plug-in\n   * @param  {String} message  message for the notification or notific8 method to call\n   * @param  {Options} options options for the notification or notific8 method called\n   * @return {Mixed}\n   */\n  return function(message, options) {\n    let callbackMethod,\n      containerClass,\n      defaultOptions,\n      moduleName,\n      notificationClass,\n      num,\n      position;\n\n    if (typeof message !== \"string\") {\n      errorMessage(\"notific8 takes a string message as the first parameter\");\n    }\n    if (options === undefined) {\n      options = {};\n    }\n    if (typeof options === 'object' && !options.hasOwnProperty('namespace') && message !== 'zindex') {\n      options.namespace = 'notific8';\n    }\n\n    switch (message) {\n      case \"configure\":\n      case \"config\":\n        return configure(options);\n      case \"zindex\":\n        return zindex(options);\n      case \"destroy\":\n        return destroy(options);\n      case \"remove\":\n        return remove(options);\n      case \"removeFromQueue\":\n        return removeFromQueue(options);\n      case \"registerModule\":\n        if (arguments.length !== 5) {\n          errorMessage(\"Registering a module requires the parameters moduleName, position, defaultOptions, and callbackMethod.\");\n        }\n        message = arguments[0];\n        [ , moduleName, position, defaultOptions, callbackMethod ] = arguments;\n        return registerModule(moduleName, position, defaultOptions, callbackMethod);\n      default:\n        containerClass = options.namespace + \"-container\";\n        if (document.getElementsByClassName(containerClass).length === 0) {\n          initContainers(options);\n        }\n        checkEdges(options);\n        notificationClass = options.namespace + \"-notification\";\n        num = document.getElementsByClassName(notificationClass).length;\n        if (!options.notificationName) {\n          options.notificationName = generateUniqueId();\n        }\n        if (!notific8Defaults.queue || num === 0) {\n          init(message, options);\n        } else {\n          notific8Queue.push({\n            message: message,\n            options: options\n          });\n        }\n        return options.notificationName;\n    }\n  };\n})();\n"]}