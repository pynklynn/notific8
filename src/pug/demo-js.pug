block moduleJs

script(type='text/javascript').
  $(function () {
    var notific8ThemeColors = {
        ocho: [],
        chicchat: [],
        atomic: [],
        materialish: []
      };

    // update the theme color lists
    $('#notific8Color').find('option').each(function(index, item) {
      var $item = $(item);
      notific8ThemeColors[$item.data('for')].push($item.val());
    });

    $('body').on('change', '#notific8Queue', function(event) {
      notific8('config', { queue: $(this).is(':checked') });
    });
    $('body').on(
      'change',
      '#notific8Theme',
      function(event) {
        $theme = $(event.currentTarget);
        var theme = $theme.val();
        $color = $('#notific8Color');
        $color.find('option').each(function(index, item) {
          $(item).remove();
        });
        for (var i in notific8ThemeColors[theme]) {
          if (notific8ThemeColors[theme].hasOwnProperty(i)) {
            var color = notific8ThemeColors[theme][i];
            $color.append($('<option value="' + color + '">' + color + '</option>'));
          }
        }
        $color.material_select();
      }
    );
    $('body').on('click', '#notific8Test', function (event) {
      var params = {
        life: $('#notific8Life').find('option:selected').val(),
        theme: $('#notific8Theme').find('option:selected').val(),
        color: $('#notific8Color').val(),
        sticky: $('#notific8Sticky').is(':checked'),
        horizontalEdge: $('#notific8horizontal').find('option:selected').val(),
        verticalEdge: $('#notific8vertical').find('option:selected').val(),
        namespace: $('#notific8Namespace').val(),
        onInit: function(data) {
          if (window.console) {
            console.log('--onInit--');
            console.log('data:');
            console.log(data);
          }
        },
        onCreate: function(notification, data) {
          if (window.console) {
            console.log('--onCreate--');
            console.log('notification:');
            console.log(notification);
            console.log('data:');
            console.log(data);
          }
        },
        onClose: function(notification, data) {
          if (window.console) {
            console.log('--onClose--');
            console.log('notification:');
            console.log(notification);
            console.log('data:');
            console.log(data);
          }
        }
      },
        text = $('#notific8Text').val(),
        $heading = $('#notific8Heading'),
        $closeText = $('#notific8CloseText'),
        $notificationName = $('#notific8QueueName'),
        $notificationId = $('#notific8Id');
      if (window.notific8ModuleOptions) {
        for (var i in window.notific8ModuleOptions) {
          if (window.notific8ModuleOptions.hasOwnProperty(i)) {
            params[i] = window.notific8ModuleOptions[i];
          }
        }
      }
      if ($heading.val()) {
        params.heading = $heading.val();
      }
      if ($closeText.val()) {
        params.closeText = $closeText.val();
      }
      if ($notificationName.val()) {
        params.notificationName = $notificationName.val();
      }
      if ($notificationId.val()) {
        params.id = $notificationId.val();
      }
      // show notification
      notific8(text, params);
      $('#notific8Queue').prop('disabled', true);
    });
    $('#notific8Theme').trigger('change');
    $('#notific8CloseAllTheme').trigger('change');
  });
